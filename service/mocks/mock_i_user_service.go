// Code generated by mockery v2.40.3. DO NOT EDIT.

package service

import mock "github.com/stretchr/testify/mock"

// MockIUserService is an autogenerated mock type for the IUserService type
type MockIUserService struct {
	mock.Mock
}

type MockIUserService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIUserService) EXPECT() *MockIUserService_Expecter {
	return &MockIUserService_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields:
func (_m *MockIUserService) Create() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIUserService_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockIUserService_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
func (_e *MockIUserService_Expecter) Create() *MockIUserService_Create_Call {
	return &MockIUserService_Create_Call{Call: _e.mock.On("Create")}
}

func (_c *MockIUserService_Create_Call) Run(run func()) *MockIUserService_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIUserService_Create_Call) Return(_a0 error) *MockIUserService_Create_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIUserService_Create_Call) RunAndReturn(run func() error) *MockIUserService_Create_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIUserService creates a new instance of MockIUserService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIUserService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIUserService {
	mock := &MockIUserService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
